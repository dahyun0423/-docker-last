# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# jdk를 통해서 application.properties를 만들고 jar를 만들고 scp -> docker compose up
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4 #라이브러리 이런거
    - name: Set up JDK 21       #역할을 지정
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name : insert application.properties
      run: |
        mkdir -p src/main/resources
        echo "${{ secrets.PROPERTIES }}" > src/main/resources/application.properties



    - name: Build with Gradle Wrapper = make jar
      run: ./gradlew build -x test

    - name : scp (sever copy protocol) -> jar파일을 vm 올리는 작업
      uses: appleboy/scp-action@master  # .jar 파일 원격 서버로 복사
      with:
          username: ubuntu
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          source:
            build/libs/*.jar
          target: "/home/ubuntu/docker-last"

    - name : docker compose 실행(mysql, spring, nginx 실행)
      uses: appleboy/ssh-action@master
      with:
            host: ${{ secrets.SSH_HOST }}
            username: ubuntu
            key: ${{ secrets.SSH_KEY }}
            script: |
              cd ~/docker-last
              docker compose up -d
